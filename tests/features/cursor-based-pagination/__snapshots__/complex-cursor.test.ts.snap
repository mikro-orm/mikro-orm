// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`simple cursor based pagination (better-sqlite) complex cursor based pagination using \`first\` and \`after\` (id asc) 1`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2' order by \`u0\`.\`name\` desc, \`u0\`.\`age\` asc, \`u0\`.\`email\` asc limit 11",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2'",
]
`;

exports[`simple cursor based pagination (better-sqlite) complex cursor based pagination using \`first\` and \`after\` (id asc) 2`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2' and \`u0\`.\`name\` <= 'User 1' and (\`u0\`.\`name\` < 'User 1' or (\`u0\`.\`age\` >= 28 and (\`u0\`.\`age\` > 28 or \`u0\`.\`email\` > 'email-55'))) order by \`u0\`.\`name\` desc, \`u0\`.\`age\` asc, \`u0\`.\`email\` asc limit 11",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2'",
]
`;

exports[`simple cursor based pagination (better-sqlite) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 1`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3' order by \`u1\`.\`email\` desc, \`u1\`.\`name\` desc, \`u0\`.\`name\` asc, \`u0\`.\`age\` desc, \`u0\`.\`email\` desc limit 6",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3'",
]
`;

exports[`simple cursor based pagination (better-sqlite) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 2`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3' and \`u1\`.\`email\` <= 'email-96' and \`u1\`.\`name\` <= 'User 3' and ((\`u1\`.\`email\` < 'email-96' and \`u1\`.\`name\` < 'User 3') or (\`u0\`.\`name\` >= 'User 3' and (\`u0\`.\`name\` > 'User 3' or (\`u0\`.\`age\` <= 38 and (\`u0\`.\`age\` < 38 or \`u0\`.\`email\` < 'email-76'))))) order by \`u1\`.\`email\` desc, \`u1\`.\`name\` desc, \`u0\`.\`name\` asc, \`u0\`.\`age\` desc, \`u0\`.\`email\` desc limit 6",
  "[query] select \`u0\`.* from \`user\` as \`u0\` where \`u0\`.\`_id\` in (5) order by \`u0\`.\`email\` asc, \`u0\`.\`name\` asc",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3'",
]
`;

exports[`simple cursor based pagination (mongo) complex cursor based pagination using \`first\` and \`after\` (id asc) 1`] = `
[
  "[query] db.getCollection('user').countDocuments({ '$or': [ { termsAccepted: true }, { name: 'User 1' }, { age: { '$lte': 30 } } ], name: { '$ne': 'User 2' } }, {});",
  "[query] db.getCollection('user').find({ '$or': [ { termsAccepted: true }, { name: 'User 1' }, { age: { '$lte': 30 } } ], name: { '$ne': 'User 2' } }, {}).sort([ [ 'name', -1 ], [ 'age', 1 ], [ 'email', 1 ] ]).limit(11).toArray();",
]
`;

exports[`simple cursor based pagination (mongo) complex cursor based pagination using \`first\` and \`after\` (id asc) 2`] = `
[
  "[query] db.getCollection('user').countDocuments({ '$or': [ { termsAccepted: true }, { name: 'User 1' }, { age: { '$lte': 30 } } ], name: { '$ne': 'User 2' } }, {});",
  "[query] db.getCollection('user').find({ '$and': [ { '$or': [ { termsAccepted: true }, { name: 'User 1' }, { age: { '$lte': 30 } } ], name: { '$ne': 'User 2' } }, { name: { '$lte': 'User 1' }, '$or': [ { name: { '$lt': 'User 1' } }, { age: { '$gte': 28 }, '$or': [ [Object], [Object] ] } ] } ] }, {}).sort([ [ 'name', -1 ], [ 'age', 1 ], [ 'email', 1 ] ]).limit(11).toArray();",
]
`;

exports[`simple cursor based pagination (mysql) complex cursor based pagination using \`first\` and \`after\` (id asc) 1`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2' order by \`u0\`.\`name\` desc, \`u0\`.\`age\` asc, \`u0\`.\`email\` asc limit 11",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2'",
]
`;

exports[`simple cursor based pagination (mysql) complex cursor based pagination using \`first\` and \`after\` (id asc) 2`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2' and \`u0\`.\`name\` <= 'User 1' and (\`u0\`.\`name\` < 'User 1' or (\`u0\`.\`age\` >= 28 and (\`u0\`.\`age\` > 28 or \`u0\`.\`email\` > 'email-55'))) order by \`u0\`.\`name\` desc, \`u0\`.\`age\` asc, \`u0\`.\`email\` asc limit 11",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2'",
]
`;

exports[`simple cursor based pagination (mysql) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 1`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3' order by \`u1\`.\`email\` desc, \`u1\`.\`name\` desc, \`u0\`.\`name\` asc, \`u0\`.\`age\` desc, \`u0\`.\`email\` desc limit 6",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3'",
]
`;

exports[`simple cursor based pagination (mysql) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 2`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3' and \`u1\`.\`email\` <= 'email-96' and \`u1\`.\`name\` <= 'User 3' and ((\`u1\`.\`email\` < 'email-96' and \`u1\`.\`name\` < 'User 3') or (\`u0\`.\`name\` >= 'User 3' and (\`u0\`.\`name\` > 'User 3' or (\`u0\`.\`age\` <= 38 and (\`u0\`.\`age\` < 38 or \`u0\`.\`email\` < 'email-76'))))) order by \`u1\`.\`email\` desc, \`u1\`.\`name\` desc, \`u0\`.\`name\` asc, \`u0\`.\`age\` desc, \`u0\`.\`email\` desc limit 6",
  "[query] select \`u0\`.* from \`user\` as \`u0\` where \`u0\`.\`_id\` in (5) order by \`u0\`.\`email\` asc, \`u0\`.\`name\` asc",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3'",
]
`;

exports[`simple cursor based pagination (postgresql) complex cursor based pagination using \`first\` and \`after\` (id asc) 1`] = `
[
  "[query] select "u0".* from "user" as "u0" where ("u0"."terms_accepted" = true or "u0"."name" = 'User 1' or "u0"."age" <= 30) and "u0"."name" != 'User 2' order by "u0"."name" desc, "u0"."age" asc, "u0"."email" asc limit 11",
  "[query] select count(*) as "count" from "user" as "u0" where ("u0"."terms_accepted" = true or "u0"."name" = 'User 1' or "u0"."age" <= 30) and "u0"."name" != 'User 2'",
]
`;

exports[`simple cursor based pagination (postgresql) complex cursor based pagination using \`first\` and \`after\` (id asc) 2`] = `
[
  "[query] select "u0".* from "user" as "u0" where ("u0"."terms_accepted" = true or "u0"."name" = 'User 1' or "u0"."age" <= 30) and "u0"."name" != 'User 2' and "u0"."name" <= 'User 1' and ("u0"."name" < 'User 1' or ("u0"."age" >= 28 and ("u0"."age" > 28 or "u0"."email" > 'email-55'))) order by "u0"."name" desc, "u0"."age" asc, "u0"."email" asc limit 11",
  "[query] select count(*) as "count" from "user" as "u0" where ("u0"."terms_accepted" = true or "u0"."name" = 'User 1' or "u0"."age" <= 30) and "u0"."name" != 'User 2'",
]
`;

exports[`simple cursor based pagination (postgresql) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 1`] = `
[
  "[query] select "u0".* from "user" as "u0" left join "user" as "u1" on "u0"."best_friend__id" = "u1"."_id" where "u1"."name" = 'User 3' order by "u1"."email" desc, "u1"."name" desc, "u0"."name" asc, "u0"."age" desc, "u0"."email" desc limit 6",
  "[query] select count(*) as "count" from "user" as "u0" left join "user" as "u1" on "u0"."best_friend__id" = "u1"."_id" where "u1"."name" = 'User 3'",
]
`;

exports[`simple cursor based pagination (postgresql) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 2`] = `
[
  "[query] select "u0".* from "user" as "u0" left join "user" as "u1" on "u0"."best_friend__id" = "u1"."_id" where "u1"."name" = 'User 3' and "u1"."email" <= 'email-96' and "u1"."name" <= 'User 3' and (("u1"."email" < 'email-96' and "u1"."name" < 'User 3') or ("u0"."name" >= 'User 3' and ("u0"."name" > 'User 3' or ("u0"."age" <= 38 and ("u0"."age" < 38 or "u0"."email" < 'email-76'))))) order by "u1"."email" desc, "u1"."name" desc, "u0"."name" asc, "u0"."age" desc, "u0"."email" desc limit 6",
  "[query] select "u0".* from "user" as "u0" where "u0"."_id" in (5) order by "u0"."email" asc, "u0"."name" asc",
  "[query] select count(*) as "count" from "user" as "u0" left join "user" as "u1" on "u0"."best_friend__id" = "u1"."_id" where "u1"."name" = 'User 3'",
]
`;

exports[`simple cursor based pagination (sqlite) complex cursor based pagination using \`first\` and \`after\` (id asc) 1`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2' order by \`u0\`.\`name\` desc, \`u0\`.\`age\` asc, \`u0\`.\`email\` asc limit 11",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2'",
]
`;

exports[`simple cursor based pagination (sqlite) complex cursor based pagination using \`first\` and \`after\` (id asc) 2`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2' and \`u0\`.\`name\` <= 'User 1' and (\`u0\`.\`name\` < 'User 1' or (\`u0\`.\`age\` >= 28 and (\`u0\`.\`age\` > 28 or \`u0\`.\`email\` > 'email-55'))) order by \`u0\`.\`name\` desc, \`u0\`.\`age\` asc, \`u0\`.\`email\` asc limit 11",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` where (\`u0\`.\`terms_accepted\` = true or \`u0\`.\`name\` = 'User 1' or \`u0\`.\`age\` <= 30) and \`u0\`.\`name\` != 'User 2'",
]
`;

exports[`simple cursor based pagination (sqlite) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 1`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3' order by \`u1\`.\`email\` desc, \`u1\`.\`name\` desc, \`u0\`.\`name\` asc, \`u0\`.\`age\` desc, \`u0\`.\`email\` desc limit 6",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3'",
]
`;

exports[`simple cursor based pagination (sqlite) complex joined cursor based pagination using \`last\` and \`before\` (id asc) 2`] = `
[
  "[query] select \`u0\`.* from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3' and \`u1\`.\`email\` <= 'email-96' and \`u1\`.\`name\` <= 'User 3' and ((\`u1\`.\`email\` < 'email-96' and \`u1\`.\`name\` < 'User 3') or (\`u0\`.\`name\` >= 'User 3' and (\`u0\`.\`name\` > 'User 3' or (\`u0\`.\`age\` <= 38 and (\`u0\`.\`age\` < 38 or \`u0\`.\`email\` < 'email-76'))))) order by \`u1\`.\`email\` desc, \`u1\`.\`name\` desc, \`u0\`.\`name\` asc, \`u0\`.\`age\` desc, \`u0\`.\`email\` desc limit 6",
  "[query] select \`u0\`.* from \`user\` as \`u0\` where \`u0\`.\`_id\` in (5) order by \`u0\`.\`email\` asc, \`u0\`.\`name\` asc",
  "[query] select count(*) as \`count\` from \`user\` as \`u0\` left join \`user\` as \`u1\` on \`u0\`.\`best_friend__id\` = \`u1\`.\`_id\` where \`u1\`.\`name\` = 'User 3'",
]
`;
