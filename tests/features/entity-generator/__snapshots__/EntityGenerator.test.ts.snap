// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EntityGenerator generate entities from schema [sqlite]: sqlite-entity-dump 1`] = `
[
  "import { Entity, Index, ManyToOne, type Opt, PrimaryKey, Property, Unique } from '@mikro-orm/core';
import { Book3 } from './book3';

@Entity()
@Index({ name: 'author3_name_favourite_book_id_index', properties: ['name', 'favouriteBook'] })
export class Author3 {

  @PrimaryKey()
  id!: number;

  @Property({ nullable: true })
  createdAt?: Date;

  @Property({ nullable: true })
  updatedAt?: Date;

  @Property()
  name!: string;

  @Unique({ name: 'author3_email_unique' })
  @Property()
  email!: string;

  @Property({ nullable: true })
  age?: number;

  @Property({ type: 'number' })
  termsAccepted: number & Opt = 0;

  @Property({ nullable: true })
  identities?: string;

  @Property({ columnType: 'date', nullable: true })
  born?: string;

  @Property({ columnType: 'time', nullable: true })
  bornTime?: string;

  @ManyToOne({ entity: () => Book3, updateRule: 'cascade', nullable: true, index: 'author3_favourite_book_idx' })
  favouriteBook?: Book3;

}
",
  "import { Entity, type Opt, PrimaryKey, Property } from '@mikro-orm/core';

@Entity()
export class BookTag3 {

  @PrimaryKey()
  id!: number;

  @Property()
  name!: string;

  @Property({ type: 'Date', defaultRaw: \`current_timestamp\` })
  version!: Date & Opt;

}
",
  "import { Entity, ManyToOne, type Opt, PrimaryKey, Property } from '@mikro-orm/core';
import { Author3 } from './author3';
import { Publisher3 } from './publisher3';

@Entity()
export class Book3 {

  @PrimaryKey()
  id!: number;

  @Property({ nullable: true })
  createdAt?: Date;

  @Property({ nullable: true })
  updatedAt?: Date;

  @Property({ type: 'string' })
  title: string & Opt = '';

  @ManyToOne({ entity: () => Author3, updateRule: 'cascade' })
  author!: Author3;

  @ManyToOne({ entity: () => Publisher3, updateRule: 'cascade', nullable: true })
  publisher?: Publisher3;

}
",
  "import { Entity, ManyToOne, PrimaryKey } from '@mikro-orm/core';
import { Book3 } from './book3';
import { BookTag3 } from './book-tag3';

@Entity({ tableName: 'book3_tags' })
export class Book3Tags {

  @PrimaryKey()
  id!: number;

  @ManyToOne({ entity: () => Book3, updateRule: 'cascade', deleteRule: 'cascade' })
  book3!: Book3;

  @ManyToOne({ entity: () => BookTag3, updateRule: 'cascade', deleteRule: 'cascade' })
  bookTag3!: BookTag3;

}
",
  "import { Entity, PrimaryKey, Property } from '@mikro-orm/core';

@Entity()
export class Publisher3 {

  @PrimaryKey()
  id!: number;

  @Property()
  name!: string;

  @Property()
  type!: string;

}
",
  "import { Entity, ManyToOne, PrimaryKey } from '@mikro-orm/core';
import { Publisher3 } from './publisher3';
import { Test3 } from './test3';

@Entity({ tableName: 'publisher3_tests' })
export class Publisher3Tests {

  @PrimaryKey()
  id!: number;

  @ManyToOne({ entity: () => Publisher3, updateRule: 'cascade', deleteRule: 'cascade' })
  publisher3!: Publisher3;

  @ManyToOne({ entity: () => Test3, updateRule: 'cascade', deleteRule: 'cascade' })
  test3!: Test3;

}
",
  "import { Entity, type Opt, PrimaryKey, Property } from '@mikro-orm/core';

@Entity()
export class Test3 {

  @PrimaryKey()
  id!: number;

  @Property({ nullable: true })
  name?: string;

  @Property({ type: 'number' })
  version: number & Opt = 1;

}
",
]
`;
