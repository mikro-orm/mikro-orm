// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`multiple schemas with same table name 1 1`] = `
[
  "import { Entity, ManyToOne, PrimaryKey, Property } from '@mikro-orm/core';

@Entity({ tableName: 'test', schema: 'schema1' })
export class Schema1Test {

  @PrimaryKey({ autoincrement: false })
  id!: bigint;

  @Property({ nullable: true })
  name?: string;

  @Property({ length: 6, nullable: true })
  created?: Date;

  @ManyToOne({ entity: () => Schema1Test, updateRule: 'cascade', deleteRule: 'set null', nullable: true })
  test?: Schema1Test;

}
",
  "import { Entity, ManyToOne, PrimaryKey, Property } from '@mikro-orm/core';

@Entity({ tableName: 'test', schema: 'schema2' })
export class Schema2Test {

  @PrimaryKey({ autoincrement: false })
  id!: bigint;

  @Property({ nullable: true })
  name?: string;

  @Property({ length: 6, nullable: true })
  created?: Date;

  @ManyToOne({ entity: () => Schema2Test, updateRule: 'cascade', deleteRule: 'set null', nullable: true })
  test?: Schema2Test;

}
",
  "import { Entity, ManyToOne, PrimaryKey, Property } from '@mikro-orm/core';

@Entity()
export class Test {

  @PrimaryKey({ autoincrement: false })
  id!: bigint;

  @Property({ nullable: true })
  name?: string;

  @Property({ length: 6, nullable: true })
  created?: Date;

  @ManyToOne({ entity: () => Test, updateRule: 'cascade', deleteRule: 'set null', nullable: true })
  test?: Test;

}
",
]
`;

exports[`multiple schemas with same table name 2 1`] = `
[
  "import { Entity, ManyToOne, PrimaryKey, Property } from '@mikro-orm/core';

@Entity({ tableName: 'test', schema: 'schema1' })
export class Schema1Test {

  @PrimaryKey({ autoincrement: false })
  id!: bigint;

  @Property({ nullable: true })
  name?: string;

  @Property({ length: 6, nullable: true })
  created?: Date;

  @ManyToOne({ entity: () => Schema1Test, updateRule: 'cascade', deleteRule: 'set null', nullable: true })
  test?: Schema1Test;

}
",
  "import { Entity, ManyToOne, PrimaryKey, Property } from '@mikro-orm/core';

@Entity({ tableName: 'test', schema: 'schema2' })
export class Schema2Test {

  @PrimaryKey({ autoincrement: false })
  id!: bigint;

  @Property({ nullable: true })
  name?: string;

  @Property({ length: 6, nullable: true })
  created?: Date;

  @ManyToOne({ entity: () => Schema2Test, updateRule: 'cascade', deleteRule: 'set null', nullable: true })
  test?: Schema2Test;

}
",
  "import { Entity, ManyToOne, PrimaryKey, Property } from '@mikro-orm/core';

@Entity({ tableName: 'test' })
export class PublicTest {

  @PrimaryKey({ autoincrement: false })
  id!: bigint;

  @Property({ nullable: true })
  name?: string;

  @Property({ length: 6, nullable: true })
  created?: Date;

  @ManyToOne({ entity: () => PublicTest, updateRule: 'cascade', deleteRule: 'set null', nullable: true })
  test?: PublicTest;

}
",
]
`;
