// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`embedded entities with custom types schema: embeddables custom types 1 1`] = `
"create table "parent" ("id" serial primary key, "nested_some_value" varchar not null, "nested_deep_some_value" varchar not null, "nested2" jsonb not null, "after" int null, "some_value" varchar null);

create table "user" ("id" serial primary key, "savings_amount" numeric(14,2) not null, "after" int null);

"
`;

exports[`embedded entities with custom types schema: embeddables custom types 2 1`] = `""`;

exports[`embedded entities with custom types schema: embeddables custom types 3 1`] = `
"drop table if exists "user" cascade;
drop table if exists "parent" cascade;

"
`;

exports[`embedded entities with custom types snapshot generator 1`] = `
"function(entity) {
  const ret = {};
  if (typeof entity.id !== 'undefined') {
    ret.id = entity.id;
  }

  if (entity.nested != null) {
    if (typeof entity.nested.someValue !== 'undefined') ret.nested_someValue = clone(convertToDatabaseValue_nested_someValue(entity.nested.someValue));

    if (entity.nested.deep != null) {
      if (typeof entity.nested.deep.someValue !== 'undefined') ret.nested_deep_someValue = clone(convertToDatabaseValue_nested_deep_someValue(entity.nested.deep.someValue));
    }

  }

  if (entity.nested2 === null) ret.nested2 = null;
  if (entity.nested2 != null) {
    ret.nested2 = {};
    if (typeof entity.nested2.someValue !== 'undefined') ret.nested2.someValue = clone(convertToDatabaseValue_nested2_someValue(entity.nested2.someValue));

    if (entity.nested2.deep === null) ret.nested2.deep = null;
    if (entity.nested2.deep != null) {
      ret.nested2.deep = {};
      if (typeof entity.nested2.deep.someValue !== 'undefined') ret.nested2.deep.someValue = clone(convertToDatabaseValue_nested2_deep_someValue(entity.nested2.deep.someValue));
    }

    ret.nested2 = cloneEmbeddable(ret.nested2);
  }

  if (typeof entity.after !== 'undefined') {
    ret.after = entity.after;
  }

  if (typeof entity.someValue !== 'undefined') {
    ret.someValue = clone(convertToDatabaseValue_someValue(entity.someValue));
  }

  return ret;
}"
`;
